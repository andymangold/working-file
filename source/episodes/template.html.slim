---
episode: true
---

- content_for(:title, "Episode #{id}: #{title}")
- content_for(:description, "#{showNotes[0...200]}")
- content_for(:soundcloudID, "#{soundcloudID}")

.text-wrapper

  = link_to "&larr; Back to all Episodes", "../episodes.html", class: "back-link"

  .episode-number Episode #{id} <span class="episode-date">&mdash; #{date.strftime('%B %e, %Y')}</span>
  h1.episode-title = title
  - if contributorSlugs.present?
    .byline
      | With&nbsp;
      = data.contributors.sort{ |a,b| a.lastName.downcase <=> b.lastName.downcase }.map{ |contributor| if contributorSlugs.include?(contributor.slug); link_to("#{contributor.firstName} #{contributor.lastName}", "../contributors/#{contributor.slug}.html"); end }.compact.join(" and ")

  .fixed-audio-player
    iframe#audio-player src="https://w.soundcloud.com/player/?url=/workingfile/ep#{id}&auto_play=false&buying=false&liking=false&download=true&sharing=true&show_artwork=false&show_comments=true&show_playcount=false&show_user=false&hide_related=true&visual=false&start_track=0&callback=true" width="100%" height="164" scrolling="no" frameborder="no"

  script src="https://w.soundcloud.com/player/api.js" type="text/javascript"
  javascript:
    (function(){
      var widgetIframe = document.getElementById('audio-player'),
          widget       = SC.Widget(widgetIframe);

      widget.bind(SC.Widget.Events.READY, function() {
        widget.bind(SC.Widget.Events.PLAY, function() {
          // get information about currently playing sound
          widget.getCurrentSound(function(currentSound) {
            console.log('sound ' + currentSound.get('') + 'began to play');
          });
        });
        // get current level of volume
        widget.getVolume(function(volume) {
          console.log('current volume value is ' + volume);
        });
        // set new volume level
        widget.setVolume(50);
        // get the value of the current position
      });

    }());

  .show-notes = showNotes

.meta-data-wrapper

  - if links.present?
    .show-links
      h3 Links Discussed
      ul
        - links.each do |link|
          li = link_to link.text, link.url

  - if transcript == true
    .transcript
      .transcript-thank-you
        span Full text transcripts brought to you by <a href="https://www.xyztype.com">XYZ&nbsp;Type</a>.
        a href="https://www.xyztype.com" = partial "shared/xyz_logo";
      = partial("transcripts/episode-#{id}", :locals => { :episodeID => id })
  - else
    .transcript.not-available Full transcript not yet available.<br />Check back soon!
